{"version":3,"sources":["types/questions.ts","store/action-creators/questions.ts","store/action-creators/index.ts","hooks/useTypeSelector.ts","components/Error/Error.tsx","components/List/List.tsx","components/Loader/Loader.tsx","components/QuestionItem/QuestionItem.tsx","utils/utils.ts","components/App/App.tsx","hooks/useActions.ts","reportWebVitals.ts","store/reducers/questionsReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["QuestionsActionTypes","getData","dispatch","a","type","GET_QUESTIONS","setTimeout","axios","get","response","GET_QUESTIONS_SUCCESS","payload","data","results","error","GET_QUESTIONS_FAIL","QuestionsActionCreators","useTypeSelector","useSelector","Error","className","List","props","items","map","renderItem","Loader","QuestionItem","question","useState","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","memoizedAnswers","useMemo","arr","item","newArr","randomIdx","Math","floor","random","length","splice","pushToRandomIdx","incorrect_answers","correct_answer","category","difficulty","replace","answer","index","name","disabled","onChange","onClick","e","preventDefault","App","state","questions","loading","useDispatch","bindActionCreators","ActionCreators","useActions","useLayoutEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3eaabf7.chunk.js","sourcesContent":["export enum QuestionsActionTypes {\r\n\tGET_QUESTIONS = 'GET_QUESTIONS',\r\n\tGET_QUESTIONS_SUCCESS = 'GET_QUESTIONS_SUCCESS',\r\n\tGET_QUESTIONS_FAIL = 'GET_QUESTIONS_FAIL',\r\n}\r\n\r\ninterface GetQuestionsAction {\r\n\ttype: QuestionsActionTypes.GET_QUESTIONS\r\n}\r\n\r\ninterface GetQuestionsSuccessAction {\r\n\ttype: QuestionsActionTypes.GET_QUESTIONS_SUCCESS\r\n\tpayload: any[]\r\n}\r\n\r\ninterface GetQuestionsFailAction {\r\n\ttype: QuestionsActionTypes.GET_QUESTIONS_FAIL\r\n\tpayload: string\r\n}\r\n\r\nexport type questionsAction =\r\n\t| GetQuestionsAction\r\n\t| GetQuestionsSuccessAction\r\n\t| GetQuestionsFailAction\r\n\r\nexport interface questionsState {\r\n\tquestions: any[]\r\n\tloading: boolean\r\n\terror: null | string\r\n}\r\n","import axios from 'axios'\r\nimport { Dispatch } from 'redux'\r\nimport { questionsAction, QuestionsActionTypes } from '../../types/questions'\r\n\r\nexport const getData = () => {\r\n\treturn async (dispatch: Dispatch<questionsAction>) => {\r\n\t\ttry {\r\n\t\t\tdispatch({ type: QuestionsActionTypes.GET_QUESTIONS })\r\n\t\t\tsetTimeout(async () => {\r\n\t\t\t\tconst response = await axios.get('https://opentdb.com/api.php?amount=10')\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionsActionTypes.GET_QUESTIONS_SUCCESS,\r\n\t\t\t\t\tpayload: response.data.results,\r\n\t\t\t\t})\r\n\t\t\t}, 1500)\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionsActionTypes.GET_QUESTIONS_FAIL,\r\n\t\t\t\tpayload: 'Ошибка при загрузке данных.',\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n","import * as QuestionsActionCreators from './questions'\r\n\r\nexport default {\r\n\t...QuestionsActionCreators,\r\n}\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\r\nimport { RootState } from '../store/reducers'\r\n\r\nexport const useTypeSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import React, { FC } from 'react'\r\nimport './Error.css'\r\n\r\ninterface ErrorProps {\r\n\terror: string | null\r\n}\r\n\r\nconst Error: FC<ErrorProps> = ({ error }) => {\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='error'>{error}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Error\r\n","import React, { ReactNode } from 'react'\r\nimport './List.css'\r\n\r\ninterface ListProps<T> {\r\n\titems: T[]\r\n\trenderItem: (item: T) => ReactNode\r\n}\r\n\r\nexport default function List<T>(props: ListProps<T>) {\r\n\treturn <div className='questions'>{props.items.map(props.renderItem)}</div>\r\n}","import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='loader'></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Loader\r\n","import React, { FC, MouseEvent, useEffect, useMemo, useState } from 'react'\r\nimport { IQuestion } from '../../types/types'\r\nimport { pushToRandomIdx } from '../../utils/utils'\r\nimport './QuestionItem.css'\r\n\r\ninterface QuestionItemProps {\r\n\tquestion: IQuestion\r\n}\r\n\r\nconst QuestionItem: FC<QuestionItemProps> = ({ question }) => {\r\n\tconst [selectedAnswer, setSelectedAnswer] = useState<string>('')\r\n\tconst [isCorrect, setIsCorrect] = useState<boolean | null>(null)\r\n\r\n\tconst checkAnswer = (e: MouseEvent<HTMLButtonElement>) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tif (selectedAnswer === question.correct_answer) {\r\n\t\t\tsetIsCorrect(true)\r\n\t\t} else {\r\n\t\t\tsetIsCorrect(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst memoizedAnswers = useMemo(\r\n\t\t() => pushToRandomIdx(question.incorrect_answers, question.correct_answer),\r\n\t\t[question.incorrect_answers, question.correct_answer]\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className='card'>\r\n\t\t\t<ul className='card__head'>\r\n\t\t\t\t<li className='card__item'>Категория: {question.category}</li>\r\n\t\t\t\t<li className='card__item'>Тип: {question.type}</li>\r\n\t\t\t\t<li className='card__item'>Сложность: {question.difficulty}</li>\r\n\t\t\t\t<li className='card__item card__item_font_bold'>\r\n\t\t\t\t\t{question.question.replace(/&quot;/g, '\"').replace(/&#039;/g, \"'\")}\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<form className='card__form'>\r\n\t\t\t\t<ul className='card__answers'>\r\n\t\t\t\t\t{memoizedAnswers.map((answer, index) => (\r\n\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\tclassName={`card__answer ${\r\n\t\t\t\t\t\t\t\t\tisCorrect === null\r\n\t\t\t\t\t\t\t\t\t\t? ''\r\n\t\t\t\t\t\t\t\t\t\t: answer === question.correct_answer\r\n\t\t\t\t\t\t\t\t\t\t? 'card__answer_correct'\r\n\t\t\t\t\t\t\t\t\t\t: 'card__answer_incorrect'\r\n\t\t\t\t\t\t\t\t}`}>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName='card__checkbox'\r\n\t\t\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\t\t\tname='answer'\r\n\t\t\t\t\t\t\t\t\tdisabled={isCorrect != null}\r\n\t\t\t\t\t\t\t\t\tonChange={() => setSelectedAnswer(answer)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{answer}\r\n\t\t\t\t\t\t\t\t<span className='checkmark'></span>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={`card__btn ${\r\n\t\t\t\t\t\tisCorrect != null ? 'card__btn_state_disabled' : ''\r\n\t\t\t\t\t}`}\r\n\t\t\t\t\ttype='submit'\r\n\t\t\t\t\tdisabled={isCorrect != null}\r\n\t\t\t\t\tonClick={checkAnswer}>\r\n\t\t\t\t\tПроверить\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default QuestionItem\r\n","export const pushToRandomIdx = (arr: string[], item: string) => {\r\n\tconst newArr = [...arr]\r\n\tconst randomIdx = Math.floor(Math.random() * (arr.length + 1))\r\n\tnewArr.splice(randomIdx, 0, item)\r\n\treturn newArr\r\n}\r\n","import React, { useEffect, useLayoutEffect } from 'react'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { useTypeSelector } from '../../hooks/useTypeSelector'\r\nimport { IQuestion } from '../../types/types'\r\nimport Error from '../Error/Error'\r\nimport List from '../List/List'\r\nimport Loader from '../Loader/Loader'\r\nimport QuestionItem from '../QuestionItem/QuestionItem'\r\n\r\nconst App = () => {\r\n\tconst { questions, loading, error } = useTypeSelector(state => state.questions)\r\n\tconst { getData } = useActions()\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tgetData()\r\n\t}, [])\r\n\r\n\tif (loading) {\r\n\t\treturn <Loader />\r\n\t}\r\n\r\n\tif (error) {\r\n\t\treturn <Error error={error} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<List\r\n\t\t\titems={questions}\r\n\t\t\trenderItem={(question: IQuestion) => (\r\n\t\t\t\t<QuestionItem question={question} key={question.question} />\r\n\t\t\t)}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport ActionCreators from '../store/action-creators/index'\r\n\r\nexport const useActions = () => {\r\n\tconst dispatch = useDispatch()\r\n\treturn bindActionCreators(ActionCreators, dispatch)\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n\tquestionsAction,\r\n\tQuestionsActionTypes,\r\n\tquestionsState,\r\n} from '../../types/questions'\r\n\r\nconst initialState: questionsState = {\r\n\tquestions: [],\r\n\tloading: false,\r\n\terror: null,\r\n}\r\n\r\nexport const questionsReducer = (\r\n\tstate = initialState,\r\n\taction: questionsAction\r\n): questionsState => {\r\n\tswitch (action.type) {\r\n\t\tcase QuestionsActionTypes.GET_QUESTIONS:\r\n\t\t\treturn {\r\n\t\t\t\tquestions: [],\r\n\t\t\t\tloading: true,\r\n\t\t\t\terror: null,\r\n\t\t\t}\r\n\t\tcase QuestionsActionTypes.GET_QUESTIONS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tquestions: action.payload,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: null,\r\n\t\t\t}\r\n\t\tcase QuestionsActionTypes.GET_QUESTIONS_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\tquestions: [],\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { questionsReducer } from './questionsReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n\tquestions: questionsReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n","import { applyMiddleware, createStore } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './components/App/App'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { store } from './store'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}